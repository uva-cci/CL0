import * as rules from "tailwindcss/lib/lib/generateRules.js";
import { findTailwindConfig } from "./config.js";
import { createTailwindContextFromConfigFile } from "./context.js";
export async function getUnregisteredClasses({ classes, configPath, cwd }) {
    const warnings = [];
    const config = findTailwindConfig(cwd, configPath);
    if (!config) {
        warnings.push({
            option: "entryPoint",
            title: `No tailwind css config found at \`${configPath}\``
        });
    }
    const context = createTailwindContextFromConfigFile(config?.path, config?.invalidate);
    const invalidClasses = classes
        .filter(className => {
        return (rules.generateRules?.([className], context) ?? rules.default?.generateRules?.([className], context)).length === 0;
    });
    return [invalidClasses, warnings];
}
//# sourceMappingURL=unregistered-classes.js.map